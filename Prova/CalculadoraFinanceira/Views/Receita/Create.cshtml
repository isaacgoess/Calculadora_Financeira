@model CalculadoraFinanceira.Models.Classes.Receita

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Receita</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataRecebimento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataRecebimento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataRecebimento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Situacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Situacao)
                    @Html.ValidationMessageFor(model => model.Situacao, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.FormaRecebimento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.FormaRecebimento, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FormaRecebimento, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Parcela, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Parcela, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Parcela, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Parcela.FormaReceita, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @foreach (CalculadoraFinanceira.Models.Classes.ParcelaReceita.TipoParcela value in Enum.GetValues(typeof(CalculadoraFinanceira.Models.Classes.ParcelaReceita.TipoParcela)))
            {
                @Html.RadioButtonFor(m => m.Parcela.FormaReceita, value)
                @Html.Label(value.ToString(), new { htmlAttributes = new { @class = "form-control" } })

            }
            @Html.ValidationMessageFor(model => model.Parcela.FormaReceita, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
       <div class="editor-label">
            @Html.LabelFor(model => model.Parcela.NumeroParcelas, htmlAttributes: new { @class = "control-label col-md-2"})
        </div>
        <div class="editor-field col-md-10">
            @Html.EditorFor(model => model.Parcela.NumeroParcelas, "ListarParcelas", new { htmlAttributes = new { @class = "form-control col-md-2" } })
            @Html.ValidationMessageFor(model => model.Parcela.NumeroParcelas, "", new { @class = "text-danger" })
        </div>
    </div>

        @*
        <div class="form-group">
            @Html.LabelFor(model => model.Parcela.NumeroParcelas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Parcela.NumeroParcelas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Parcela.NumeroParcelas, "", new { @class = "text-danger" })
            </div>
        </div>
    *@
    <div class="form-group">
        @Html.LabelFor(model => model.IdTipoReceita, "IdTipoReceita", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdTipoReceita", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdTipoReceita, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
